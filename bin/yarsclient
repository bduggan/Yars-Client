#!/usr/bin/env perl

use strict;
use warnings;
use File::Spec;
use File::Basename 'dirname';


use lib join '/', File::Spec->splitdir(dirname(__FILE__)), 'lib';
use lib join '/', File::Spec->splitdir(dirname(__FILE__)), '..', 'lib';

use Yars::Client;
use Clustericious::Client::Command;
use Log::Log4perl::CommandLine (':all', ':loginit' => <<"EOT");
           log4perl.rootLogger = WARN, Screen
           log4perl.appender.Screen = Log::Log4perl::Appender::ScreenColoredLevels
           log4perl.appender.Screen.layout = Log::Log4perl::Layout::PatternLayout
           log4perl.appender.Screen.layout.ConversionPattern = [%-5p] %d %F{1} (%L) %m %n
EOT


if ($ARGV[0] and $ARGV[0] eq 'upload') {
    # Clustericious-Client attempts to load file arguments as YAML by default, but
    # not all files to upload are YAML.
    shift @ARGV;
    my $yc = Yars::Client->new;
    $yc->upload(@ARGV);
} 
else {
    Clustericious::Client::Command->run(Yars::Client->new, @ARGV);
}



__END__

=head1 NAME

B<yarsclient> - Upload, download, and delete files to Yars.


=head1 SYNOPSIS

B<yarsclient> upload FILE

B<yarsclient> download FILE MD5

B<yarsclient> remove FILE MD5



=head1 DESCRIPTION

Command-line interface to Yars::Client.  Client for Yars.


=head1 AUTHORS

Marty Brandon, C<< <mbrandon at sesda2.com> >>

=head1 SEE ALSO

L<Yars::Client>

L<RESTAS::Client>

L<Clustericious::Client>

=cut


